<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Hello Friend NG</title>
        <link>https://orjan-berg.github.io/posts/</link>
        <description>Recent content in Posts on Hello Friend NG</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Tue, 14 Mar 2023 12:05:14 +0100</lastBuildDate>
        <atom:link href="https://orjan-berg.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Get-Date</title>
            <link>https://orjan-berg.github.io/posts/getdate/</link>
            <pubDate>Tue, 14 Mar 2023 12:05:14 +0100</pubDate>
            
            <guid>https://orjan-berg.github.io/posts/getdate/</guid>
            <description>Ofte har man behov for å filtrere data, slik som jeg når jeg skulle finne records i en sql tabell som var endret etter en gitt dato.
Jeg liker å bruke Powershell og spesielt modulen dbatools. Dette ble derfor mine foretrukne verktøy til å løse denne oppgaven.
Har Powershell en cmdlet for å arbeide med datoer?
For å finne ut av dette benyttet jeg Get-Command -CommandType -Name *date*
Powershell kom med en rekke forslag,</description>
            <content type="html"><![CDATA[<p>Ofte har man behov for å filtrere data, slik som jeg når jeg skulle finne records i en sql tabell som var endret etter en gitt dato.</p>
<p>Jeg liker å bruke Powershell og spesielt modulen dbatools. Dette ble derfor mine foretrukne verktøy til å løse denne oppgaven.</p>
<p>Har Powershell en cmdlet for å arbeide med datoer?</p>
<p>For å finne ut av dette benyttet jeg <code>Get-Command -CommandType -Name *date*</code></p>
<p>Powershell kom med en rekke forslag,</p>
<p><img src="docs/images/GetDate01.png" alt="Example image"></p>
<p>Av disse så fant jeg at <code>Get-Date</code> kunne gjøre det jeg var ute etter.</p>
<p><code>Get-Date</code> har properties for å angi Day, Month og Year. Disse brukte jeg for å angi datoen jeg ville ha.</p>
<p><code>$chdt = Get-Date -Year 2022 -Month 11 -Day 17</code> etter å ha satt variabelen $chdt slik jeg ville, var det på tide å hente fram dbtools.</p>
<p>Dbtools har funksjonen <code>Invoke-DbaQuery</code>.</p>
<p><code>invoke-DbaQuery -SqlInstance srv-prod-sql01 -Database VDC_SystemDB -query 'select * from VWUser'</code> henter ut alle records i tabellen VWUser. Jeg er ikke ute etter alle felter. Jeg piper derfor resultatet til <code>Select-Object</code>, på denne måten <code>Select-Object -Property UserId, Username, LastUpdate</code>.</p>
<p>Nå har jeg de feltene jeg trenger, men fortsatt har jeg alt for mange records. Jeg piper derfor resultatet videre til <code>Where-Object</code>. <code>Where-Object {$_.LastUpdate.Date -ge $chdt}</code></p>
<p>Helt til slutt vil jeg ha resultatet lagret i en csv fil. Det gjør jeg ved å pipe resultatet til <code>Export-Csv</code>.</p>
<p>Den fulle onelineren blir derfor</p>
<pre tabindex="0"><code>invoke-DbaQuery -SqlInstance srv-prod-sql01 -Database VDC_SystemDB -query &#39;select * from VWUser&#39; | Select-Object -Property UserId, Username, LastUpdate | Where-Object {$_.LastUpdate.Date -ge $chdt} | Export-Csv F:\Exsitec_Temp\VDC_brukere.csv -NoTypeInformation
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Kryptert passord</title>
            <link>https://orjan-berg.github.io/posts/encryptedcredentials/</link>
            <pubDate>Fri, 03 Feb 2023 15:24:39 +0100</pubDate>
            
            <guid>https://orjan-berg.github.io/posts/encryptedcredentials/</guid>
            <description>Hvordan kan vi bruke kryptert passord i Powershell skript? Lage et kryptert passord Vi lager en funksjon som lagrer et kryptert passord i en fil på disk.
#function to Save Credentials to a fileFunction Save-Credential([string]$UserName, [string]$KeyPath){#Create directory for Key fileIf (!(Test-Path $KeyPath)) { Try {New-Item -ItemType Directory -Path $KeyPath -ErrorAction STOP | Out-Null}Catch {Throw $_.Exception.Message}}#store password encrypted in file$Credential = Get-Credential -Message &amp;#34;Enter the Credentials:&amp;#34; -UserName $UserName$Credential.</description>
            <content type="html"><![CDATA[<h2 id="hvordan-kan-vi-bruke-kryptert-passord-i-powershell-skript">Hvordan kan vi bruke kryptert passord i Powershell skript?</h2>
<h3 id="lage-et-kryptert-passord">Lage et kryptert passord</h3>
<p>Vi lager en funksjon som lagrer et kryptert passord i en fil på disk.</p>
<pre tabindex="0"><code>#function to Save Credentials to a file
Function Save-Credential([string]$UserName, [string]$KeyPath)
{
    #Create directory for Key file
    If (!(Test-Path $KeyPath)) {        
        Try {
            New-Item -ItemType Directory -Path $KeyPath -ErrorAction STOP | Out-Null
        }
        Catch {
            Throw $_.Exception.Message
        }
    }
    #store password encrypted in file
    $Credential = Get-Credential -Message &#34;Enter the Credentials:&#34; -UserName $UserName
    $Credential.Password | ConvertFrom-SecureString | Out-File &#34;$($KeyPath)\$($Credential.Username).cred&#34; -Force
}
</code></pre><p>Deretter bruker vi funksjonen <code>Save-Credential -Username &quot;vismaadmin&quot; -KeyPath &quot;c:\exsitec\cred&quot;</code></p>
<p>Det krypterte passordet kan se ut som dette:</p>
<pre tabindex="0"><code>01000000d08c9ddf0115d1118c7a00c04fc297eb010000009fdff65875d7ee41850f1a31722de5640000000002000000000003660000c000000010000000b331f6114b6428f1d4a392c2e19194ec0000000004800000a0000000100000007ca12454435ebd491dc697abe692d05918000000883adc0c65048f382253a512e795fdc4b354a1312a393c761400000052cbcca4313d77f80b0a6c679152b30f5cd0f5b1
</code></pre><p>Når vi har det krypterte passordet, kan vi lese det fra fil og bruke det i et skript:</p>
<pre tabindex="0"><code>#function to get credentials from a Saved file
Function Get-SavedCredential([string]$UserName,[string]$KeyPath)
{
    If(Test-Path &#34;$($KeyPath)\$($Username).cred&#34;) {
        $SecureString = Get-Content &#34;$($KeyPath)\$($Username).cred&#34; | ConvertTo-SecureString
        $Credential = New-Object System.Management.Automation.PSCredential -ArgumentList $Username, $SecureString
    }
    Else {
        Throw &#34;Unable to locate a credential for $($Username)&#34;
    }
    Return $Credential
}
</code></pre><p>Vi kaller på passordet på denne måten <code>$Cred = Get-SavedCredential -Username &quot;vismaadmin&quot; -KeyPath &quot;c:\exsitec\cred&quot;</code></p>
<p>ide hentet fra <a href="https://www.sharepointdiary.com/2020/01/read-write-encrypted-password-file-in-powershell-script.html">Sharepoint Diary</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Where-Object</title>
            <link>https://orjan-berg.github.io/posts/foreach/</link>
            <pubDate>Mon, 30 Jan 2023 11:23:50 +0100</pubDate>
            
            <guid>https://orjan-berg.github.io/posts/foreach/</guid>
            <description>Jeg hadde behov for å finne alle databaser som hadde et view med navnet &amp;ldquo;Actor&amp;rdquo;.
I slike tilfeller har jeg min &amp;ldquo;go-to&amp;rdquo; modul i Powershell - dbatools.
Først setter jeg opp noen variabler
$sqlsrv = &amp;#34;nn-sql-02&amp;#34;$sqlcred = Get-Credential -UserName visma Sjekker at det er kontakt med server
Get-DbaDatabase -SqlInstance $sqlsrv -SqlCredential $sqlcred -Database F0805 Svaret fra server er positivt
ComputerName : NN-SQL-02InstanceName : MSSQLSERVERSqlInstance : NN-SQL-02Name : F0805Status : NormalIsAccessible : True Jeg kunne også benyttet funksjonen Connect-DbaInstance til dette formålet.</description>
            <content type="html"><![CDATA[<p>Jeg hadde behov for å finne alle databaser som hadde et view med navnet &ldquo;Actor&rdquo;.</p>
<p>I slike tilfeller har jeg min &ldquo;go-to&rdquo; modul i Powershell - dbatools.</p>
<p>Først setter jeg opp noen variabler</p>
<pre tabindex="0"><code>$sqlsrv = &#34;nn-sql-02&#34;
$sqlcred = Get-Credential -UserName visma
</code></pre><p>Sjekker at det er kontakt med server</p>
<pre tabindex="0"><code>Get-DbaDatabase -SqlInstance $sqlsrv -SqlCredential $sqlcred -Database F0805
</code></pre><p>Svaret fra server er positivt</p>
<pre tabindex="0"><code>ComputerName       : NN-SQL-02
InstanceName       : MSSQLSERVER
SqlInstance        : NN-SQL-02
Name               : F0805
Status             : Normal
IsAccessible       : True
</code></pre><p>Jeg kunne også benyttet funksjonen <code>Connect-DbaInstance</code> til dette formålet.</p>
<p>Jeg kan nå gå videre for å finne viewet jeg søker etter</p>
<pre tabindex="0"><code>$views = Find-DbaView -SqlInstance $sqlsrv -SqlCredential $sqlcred -Pattern &#39;actor&#39; | Where-Object {$_.Name -like &#34;Actor&#34;} | Select-Object -Property Database, Name | ft -AutoSize
</code></pre><p>Jeg bruker her funksjonen <code>Where-Object</code> for å finne alle views med navn &ldquo;Actor&rdquo;</p>
<p>Ved å benytte <code>$views</code> finner jeg at det er kun 1 database, av totalt 103 databaser som har dette viewet.</p>
<pre tabindex="0"><code>Database Name
-------- ----
F0005    Actor
</code></pre>]]></content>
        </item>
        
        <item>
            <title>RobocopyBasics</title>
            <link>https://orjan-berg.github.io/posts/robocopybasics/</link>
            <pubDate>Wed, 25 Jan 2023 15:34:17 +0100</pubDate>
            
            <guid>https://orjan-berg.github.io/posts/robocopybasics/</guid>
            <description>Robocopy &amp;lsquo;C:\Program Files (x86)\Visma\Business&#39; E:\Temp\Business /e /NFL /NDL /NS /NC /NJH /MT:2
Parametere /s kopierer alle foldere ekskluder tomme
/e kopierer alle foldere inkludert tomme
/EF *Eksludere filer f.eks .pdf
/ED Eksludere directory
/NFL No File List - don&amp;rsquo;t log file names.
/NDL No Directory List - don&amp;rsquo;t log directory names.
/NJH No Job Header.
/NJS No Job Summary.
/NP No Progress - don&amp;rsquo;t display percentage copied.
/NS No Size - don&amp;rsquo;t log file sizes.</description>
            <content type="html"><![CDATA[<p>Robocopy &lsquo;C:\Program Files (x86)\Visma\Business' E:\Temp\Business /e /NFL /NDL /NS /NC /NJH /MT:2</p>
<h2 id="parametere">Parametere</h2>
<h3 id="s">/s</h3>
<p><em>kopierer alle foldere ekskluder tomme</em></p>
<h3 id="e">/e</h3>
<p><em>kopierer alle foldere inkludert tomme</em></p>
<h3 id="ef">/EF</h3>
<p>*Eksludere filer f.eks <em>.pdf</em></p>
<h3 id="ed">/ED</h3>
<p><em>Eksludere directory</em></p>
<h3 id="nfl">/NFL</h3>
<p><em>No File List - don&rsquo;t log file names.</em></p>
<h3 id="ndl">/NDL</h3>
<p><em>No Directory List - don&rsquo;t log directory names.</em></p>
<h3 id="njh">/NJH</h3>
<p><em>No Job Header.</em></p>
<h3 id="njs">/NJS</h3>
<p><em>No Job Summary.</em></p>
<h3 id="np">/NP</h3>
<p><em>No Progress - don&rsquo;t display percentage copied.</em></p>
<h3 id="ns">/NS</h3>
<p><em>No Size - don&rsquo;t log file sizes.</em></p>
<h3 id="nc">/NC</h3>
<p><em>No Class - don&rsquo;t log file classes.</em></p>
]]></content>
        </item>
        
        <item>
            <title>Examplepost</title>
            <link>https://orjan-berg.github.io/posts/examplepost/</link>
            <pubDate>Sun, 22 Jan 2023 21:54:20 +0100</pubDate>
            
            <guid>https://orjan-berg.github.io/posts/examplepost/</guid>
            <description>GIT workflow Etter at du har gjort en endring i en fil kjør kommandoen git status:
Her ser vi at det er 1 fil (examplepost.md) som ikke er &amp;ldquo;added&amp;rdquo; til Git. Vi gjør det med kommandoen git add &amp;ndash;all (eller git add content/posts/examplepost.md).</description>
            <content type="html"><![CDATA[<h2 id="git-workflow">GIT workflow</h2>
<p>Etter at du har gjort en endring i en fil kjør kommandoen git status:</p>
<p><img src="docs/images/GitStatus.png" alt="Example image"></p>
<p>Her ser vi at det er 1 fil (examplepost.md) som ikke er &ldquo;added&rdquo; til Git. Vi gjør det med kommandoen git add &ndash;all (eller git add content/posts/examplepost.md).</p>
<p><img src="docs/images/GitAdd.png" alt="Example image"></p>
]]></content>
        </item>
        
        <item>
            <title>My First Post</title>
            <link>https://orjan-berg.github.io/posts/my-first-post/</link>
            <pubDate>Fri, 20 Jan 2023 15:29:38 +0100</pubDate>
            
            <guid>https://orjan-berg.github.io/posts/my-first-post/</guid>
            <description>Introduction This is bold text, and this is emphasized text.
Visit the Hugo website!</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>This is <strong>bold</strong> text, and this is <em>emphasized</em> text.</p>
<p>Visit the <a href="https://gohugo.io">Hugo</a> website!</p>
]]></content>
        </item>
        
    </channel>
</rss>
